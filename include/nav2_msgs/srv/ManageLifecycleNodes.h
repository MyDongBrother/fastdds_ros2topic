// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ManageLifecycleNodes.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_NAV2_MSGS_SRV_MANAGELIFECYCLENODES_H_
#define _FAST_DDS_GENERATED_NAV2_MSGS_SRV_MANAGELIFECYCLENODES_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(ManageLifecycleNodes_SOURCE)
#define ManageLifecycleNodes_DllAPI __declspec( dllexport )
#else
#define ManageLifecycleNodes_DllAPI __declspec( dllimport )
#endif // ManageLifecycleNodes_SOURCE
#else
#define ManageLifecycleNodes_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define ManageLifecycleNodes_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


namespace nav2_msgs {
    namespace srv {
        namespace ManageLifecycleNodes_Request_Constants {
            const uint8_t STARTUP = 0;
            const uint8_t PAUSE = 1;
            const uint8_t RESUME = 2;
            const uint8_t RESET = 3;
            const uint8_t SHUTDOWN = 4;
        } // namespace ManageLifecycleNodes_Request_Constants
        /*!
         * @brief This class represents the structure ManageLifecycleNodes_Request defined by the user in the IDL file.
         * @ingroup MANAGELIFECYCLENODES
         */
        class ManageLifecycleNodes_Request
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Request();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~ManageLifecycleNodes_Request();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Request that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Request(
                    const ManageLifecycleNodes_Request& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Request that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Request(
                    ManageLifecycleNodes_Request&& x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Request that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Request& operator =(
                    const ManageLifecycleNodes_Request& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Request that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Request& operator =(
                    ManageLifecycleNodes_Request&& x);

            /*!
             * @brief Comparison operator.
             * @param x nav2_msgs::srv::ManageLifecycleNodes_Request object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const ManageLifecycleNodes_Request& x) const;

            /*!
             * @brief Comparison operator.
             * @param x nav2_msgs::srv::ManageLifecycleNodes_Request object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const ManageLifecycleNodes_Request& x) const;

            /*!
             * @brief This function sets a value in member command
             * @param _command New value for member command
             */
            eProsima_user_DllExport void command(
                    uint8_t _command);

            /*!
             * @brief This function returns the value of member command
             * @return Value of member command
             */
            eProsima_user_DllExport uint8_t command() const;

            /*!
             * @brief This function returns a reference to member command
             * @return Reference to member command
             */
            eProsima_user_DllExport uint8_t& command();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const nav2_msgs::srv::ManageLifecycleNodes_Request& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            uint8_t m_command;
        };
        /*!
         * @brief This class represents the structure ManageLifecycleNodes_Response defined by the user in the IDL file.
         * @ingroup MANAGELIFECYCLENODES
         */
        class ManageLifecycleNodes_Response
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Response();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~ManageLifecycleNodes_Response();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Response that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Response(
                    const ManageLifecycleNodes_Response& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Response that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Response(
                    ManageLifecycleNodes_Response&& x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Response that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Response& operator =(
                    const ManageLifecycleNodes_Response& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object nav2_msgs::srv::ManageLifecycleNodes_Response that will be copied.
             */
            eProsima_user_DllExport ManageLifecycleNodes_Response& operator =(
                    ManageLifecycleNodes_Response&& x);

            /*!
             * @brief Comparison operator.
             * @param x nav2_msgs::srv::ManageLifecycleNodes_Response object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const ManageLifecycleNodes_Response& x) const;

            /*!
             * @brief Comparison operator.
             * @param x nav2_msgs::srv::ManageLifecycleNodes_Response object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const ManageLifecycleNodes_Response& x) const;

            /*!
             * @brief This function sets a value in member success
             * @param _success New value for member success
             */
            eProsima_user_DllExport void success(
                    bool _success);

            /*!
             * @brief This function returns the value of member success
             * @return Value of member success
             */
            eProsima_user_DllExport bool success() const;

            /*!
             * @brief This function returns a reference to member success
             * @return Reference to member success
             */
            eProsima_user_DllExport bool& success();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const nav2_msgs::srv::ManageLifecycleNodes_Response& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            bool m_success;
        };
    } // namespace srv
} // namespace nav2_msgs

#endif // _FAST_DDS_GENERATED_NAV2_MSGS_SRV_MANAGELIFECYCLENODES_H_